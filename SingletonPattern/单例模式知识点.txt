单例模式
1.我是皇帝我独苗
	皇帝只能有一个，也就是一个类只能产生一个对象
	对象的产生是通过new关键字完成，使用new关键字创建对象时，都会根据输入的参数调用相应的构造函数
	 把构造函数设置为private
2.单例模式的定义
	确保某个类只有一个实例，而且自行实例化并向整个系统提供这个实例。
3.单例模式的应用
	3.1.单例模式的有优点
		由于单例模式中内存只有一个实例，减少了内存开支，特别是一个对对象频繁的创建，销毁时，而且创建或销毁时性能又无法优化，单例模式优点非常明显
		减少系统的性能开销
		   当一个对象的产生需要比较多的资源的时候，如读取配置，产生其他依赖，则可以通过在应用启动时直接产生一个单例对象，然后永久驻留内存的方式来解决
		可以避免对资源的多重占用
		可以在系统中设置全局的访问点，优化和共享资源访问，设计一个单利类负责所有数据表的映射。
	3.2.单例模式的缺点
		一般没有接口，扩展很难
		单例模式对测试不利，
		单例模式与单一职责原则有冲突。
	3.3.单例模式的应用场景
		要求一个类有且仅有一个对象，如果出现多个对象就会产生“不良反应”
			要求生成唯一序号的环境
			在整个项目需要一个共享访问点或共享数据。
			创建一个对象需要消耗的资源过多，如要访问IO和数据库等资源
			需要定义大量的静态常量和静态方法，
	3.4.单例模式的注意事项
		注意同步问题
		在getInstance 上家synchronized
		不要实现Cloneable接口
4.单例模式的扩展
	一个类要求只产生两三个对象
总结
	每个Bean默认的就是单例模式优点是Spring容器可以管理这些Bean生命周期，决定什么时候创建，什么时候销毁。销毁要如何处理
	如果采用非单例模式Protorype类型，Bean初始化后的管理就交给J2EE容器。Spring容器不再跟踪管理Bean的生命周期。