1.韩非子身边的卧底是谁派来的
2.观察模式的定义
	观察者模式也叫做订阅模式，定义如下：
		定义对象间一种一对多的依赖关系，使得每当一个对象改变状态的时候，则所有依赖它的对象都会的饿到通知并更新。
	观察模式的几个角色名称：
		Subject被观察者：
			定义被观察者实现的职责
			必须能够动态的增加
			取消观察者
			一般由抽象类或者实现类
			仅仅完成作为被观察这必须实现的职责：管理观察者并通知观察者
		Observer观察者：
			观察者收到消息后，即进行update更新，对收到的信息进行具体的处理
		ConcreteSubject具体的被观察这
			定义被观察者自己的业务逻辑，同时定义对哪些时间进行通知
		ConcreteObserver具体的观察者
			每个观察在结束到消息后的处理反是不同，每个观察者有自己的处理逻辑
3.观察模式的应用
	3.1.观察模式的优点
		观察者与被观察者之间是抽象耦合
			容易扩展
		建立一套触发机制
	3.2.观察模式的缺点
		需要考虑开发效率和运行效率的问题，一个被观察者，多个观察者，开发调试比较负载
		一般采用异步
	3.3.观察者模式的应用场景
		关联行为场景
		事件多级触发场景
		跨系统的消息交换场景，如消息队列的处理机制
	3.4.观察者模式的注意事项
		广播链的问题
		异步处理的问题
4.观察者模式的扩展
	4.1.java世界的观察者
		可拓展的父类
		java.util.Observale
	4.2.项目中真实的观察者模式
		观察者和被观察者之间的消息沟通
			被观察者的改变会触发一个观察者的行为，同时会传递一个消息给观察者。
			实际的做法中：
				观察者中的update方法接受两个参数，一个是被观察者，一个是DTO传输对象。一般是纯洁的javaBean，由被观察者生成，
				由观察者消费
		观察者的响应方式
			采用多线程
			采用缓存技术
		被观察者尽量自己做主